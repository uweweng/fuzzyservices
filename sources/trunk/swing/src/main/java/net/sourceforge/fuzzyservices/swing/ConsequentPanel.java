/*
 * ConsequentPanel.java
 *
 * Created on 2. Februar 2008, 13:05
 */

package net.sourceforge.fuzzyservices.swing;

import org.jdesktop.application.Action;

/**
 *
 * @author  Administrator
 */
public class ConsequentPanel extends javax.swing.JPanel {
    
    /** Creates new form ConsequentPanel */
    public ConsequentPanel() {
        initComponents();
    }
    /** Creates new form ConsequentPanel
     * @param model model for this component
     */
    public ConsequentPanel(RuleModel model) {
        this();
        setModel(model);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableScrollPane = new javax.swing.JScrollPane();
        consequentTable = new net.sourceforge.fuzzyservices.swing.ConsequentTable();
        buttonPanel = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(mydesktopapplication.MyDesktopApplication.class).getContext().getResourceMap(ConsequentPanel.class);
        setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("Form.border.title"))); // NOI18N
        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        tableScrollPane.setName("tableScrollPane"); // NOI18N

        consequentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        consequentTable.setName("consequentTable"); // NOI18N
        tableScrollPane.setViewportView(consequentTable);

        add(tableScrollPane, java.awt.BorderLayout.CENTER);

        buttonPanel.setName("buttonPanel"); // NOI18N
        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(mydesktopapplication.MyDesktopApplication.class).getContext().getActionMap(ConsequentPanel.class, this);
        addButton.setAction(actionMap.get("addConsequent")); // NOI18N
        addButton.setName("addButton"); // NOI18N
        buttonPanel.add(addButton);

        removeButton.setAction(actionMap.get("removeConsequent")); // NOI18N
        removeButton.setName("removeButton"); // NOI18N
        buttonPanel.add(removeButton);

        add(buttonPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void addConsequent() {
    }

    @Action
    public void removeConsequent() {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton addButton;
    javax.swing.JPanel buttonPanel;
    net.sourceforge.fuzzyservices.swing.ConsequentTable consequentTable;
    javax.swing.JButton removeButton;
    javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables
    /** Bound property name for <code>model</code>. */
    public static final String MODEL_PROPERTY = "model";
    private RuleModel model = new DefaultRuleModel();

    /**
     * Defines a new model for this component.
     * @param model The new value for the property.
     * @see #getModel
     */
    public void setModel(RuleModel model) {
        RuleModel oldModel = this.model;
        this.model = model;
        firePropertyChange(MODEL_PROPERTY, oldModel, model);
    }

    /**
     * Returns the model of this component.
     * @return the <code>model</code> property
     * @see #setModel
     */
    public RuleModel getModel() {
        return model;
    }
    
}
