/*
 * DiscreteFuzzySetDialog.java
 *
 * Created on 2. Februar 2008, 13:27
 */

package net.sourceforge.fuzzyservices.swing;

import org.jdesktop.application.Action;

/**
 *
 * @author  Administrator
 */
public class DiscreteFuzzySetDialog extends javax.swing.JDialog {
    
    /** Creates new form DiscreteFuzzySetDialog
     * @param parent parent of this component
     * @param modal modal property
     */
    public DiscreteFuzzySetDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    /** Creates new form DiscreteFuzzySetDialog
     * @param parent parent of this component
     * @param modal modal property
     * @param model model of this component
     */
    public DiscreteFuzzySetDialog(java.awt.Frame parent, boolean modal, DiscreteFuzzySetModel model) {
        this(parent, modal);
        setModel(model);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        discreteFuzzySetEditorPanel1 = new net.sourceforge.fuzzyservices.swing.DiscreteFuzzySetEditorPanel();
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        discreteFuzzySetEditorPanel1.setName("discreteFuzzySetEditorPanel1"); // NOI18N
        getContentPane().add(discreteFuzzySetEditorPanel1, java.awt.BorderLayout.CENTER);

        buttonPanel.setName("buttonPanel"); // NOI18N
        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(mydesktopapplication.MyDesktopApplication.class).getContext().getActionMap(DiscreteFuzzySetDialog.class, this);
        okButton.setAction(actionMap.get("ok")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        buttonPanel.add(okButton);

        cancelButton.setAction(actionMap.get("cancel")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiscreteFuzzySetDialog dialog = new DiscreteFuzzySetDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    @Action
    public void ok() {
    }

    @Action
    public void cancel() {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JPanel buttonPanel;
    javax.swing.JButton cancelButton;
    net.sourceforge.fuzzyservices.swing.DiscreteFuzzySetEditorPanel discreteFuzzySetEditorPanel1;
    javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
    /** Bound property name for <code>model</code>. */
    public static final String MODEL_PROPERTY = "model";
    private DiscreteFuzzySetModel model = new DefaultDiscreteFuzzySetModel();

    /**
     * Defines a new model for this component.
     * @param model The new value for the property.
     * @see #getModel
     */
    public void setModel(DiscreteFuzzySetModel model) {
        DiscreteFuzzySetModel oldModel = this.model;
        this.model = model;
        firePropertyChange(MODEL_PROPERTY, oldModel, model);
    }

    /**
     * Returns the model of this component.
     * @return the <code>model</code> property
     * @see #setModel
     */
    public DiscreteFuzzySetModel getModel() {
        return model;
    }
    
}
