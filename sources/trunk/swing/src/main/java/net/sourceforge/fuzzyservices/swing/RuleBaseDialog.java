/*
 * RuleBaseDialog.java
 *
 * Created on 2. Februar 2008, 14:14
 */

package net.sourceforge.fuzzyservices.swing;

import org.jdesktop.application.Action;

/**
 *
 * @author  Administrator
 */
public class RuleBaseDialog extends javax.swing.JDialog {
    
    /** Creates new form RuleBaseDialog
     * @param parent parent of this component
     * @param modal modal property
     */
    public RuleBaseDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    /** Creates new form RuleBaseDialog
     * @param parent parent of this component
     * @param modal modal property
     * @param model model for this component
     */
    public RuleBaseDialog(java.awt.Frame parent, boolean modal, RuleBaseModel model) {
        this(parent, modal);
        setModel(model);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        editorPanel = new javax.swing.JPanel();
        nameEditorPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        ruleListEditorPanel = new net.sourceforge.fuzzyservices.swing.RuleListEditorPanel();
        aggregationOperatorPanel = new net.sourceforge.fuzzyservices.swing.OperatorPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(mydesktopapplication.MyDesktopApplication.class).getContext().getResourceMap(RuleBaseDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        buttonPanel.setName("buttonPanel"); // NOI18N
        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(mydesktopapplication.MyDesktopApplication.class).getContext().getActionMap(RuleBaseDialog.class, this);
        okButton.setAction(actionMap.get("ok")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        buttonPanel.add(okButton);

        cancelButton.setAction(actionMap.get("cancel")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        editorPanel.setName("editorPanel"); // NOI18N
        editorPanel.setLayout(new java.awt.BorderLayout());

        nameEditorPanel.setName("nameEditorPanel"); // NOI18N
        nameEditorPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        nameLabel.setLabelFor(nameTextField);
        nameLabel.setText(resourceMap.getString("nameLabel.text")); // NOI18N
        nameLabel.setName("nameLabel"); // NOI18N
        nameEditorPanel.add(nameLabel);

        nameTextField.setColumns(20);
        nameTextField.setAction(actionMap.get("editName")); // NOI18N
        nameTextField.setName("nameTextField"); // NOI18N
        nameEditorPanel.add(nameTextField);

        editorPanel.add(nameEditorPanel, java.awt.BorderLayout.PAGE_START);

        ruleListEditorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("ruleListEditorPanel.border.title"))); // NOI18N
        ruleListEditorPanel.setName("ruleListEditorPanel"); // NOI18N
        editorPanel.add(ruleListEditorPanel, java.awt.BorderLayout.CENTER);

        aggregationOperatorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("aggregationOperatorPanel.border.title"))); // NOI18N
        aggregationOperatorPanel.setName("aggregationOperatorPanel"); // NOI18N
        editorPanel.add(aggregationOperatorPanel, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(editorPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RuleBaseDialog dialog = new RuleBaseDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    @Action
    public void cancel() {
    }

    @Action
    public void ok() {
    }

    @Action
    public void editName() {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    net.sourceforge.fuzzyservices.swing.OperatorPanel aggregationOperatorPanel;
    javax.swing.JPanel buttonPanel;
    javax.swing.JButton cancelButton;
    javax.swing.JPanel editorPanel;
    javax.swing.JPanel nameEditorPanel;
    javax.swing.JLabel nameLabel;
    javax.swing.JTextField nameTextField;
    javax.swing.JButton okButton;
    net.sourceforge.fuzzyservices.swing.RuleListEditorPanel ruleListEditorPanel;
    // End of variables declaration//GEN-END:variables
    /** Bound property name for <code>model</code>. */
    public static final String MODEL_PROPERTY = "model";
    private RuleBaseModel model = new DefaultRuleBaseModel();

    /**
     * Defines a new model for this component.
     * @param model The new value for the property.
     * @see #getModel
     */
    public void setModel(RuleBaseModel model) {
        RuleBaseModel oldModel = this.model;
        this.model = model;
        firePropertyChange(MODEL_PROPERTY, oldModel, model);
    }

    /**
     * Returns the model of this component.
     * @return the <code>model</code> property
     * @see #setModel
     */
    public RuleBaseModel getModel() {
        return model;
    }
    
}
